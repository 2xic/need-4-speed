import random

random.seed(10)

class Column:
    def __init__(self, name, type) -> None:
        self.name = name
        self.type = type
        assert type in [str, int]

        self.varchar_length = 128
        self.generated = (self.name  == "id")

    def set_length(self, varchar_length):
        self.varchar_length = varchar_length
        return self

    def sql(self, is_firebird):
        if self.generated:
            if is_firebird:
                return f"{self.name} INTEGER generated by default as identity primary key"
            else:
                return f"{self.name} SERIAL PRIMARY KEY"
        elif self.type == str:
            return f"{self.name} VARCHAR({self.varchar_length})"
        elif self.type == int:
            return f"{self.name} INTEGER"
        else:
            raise Exception("Unknown")

    def generate(self):
        if self.type == str:
            words = "".join([
                chr(random.randint(65, 65 + 20)) for i in range(self.varchar_length - 1)
            ])
            return f"'{words}'"
        else:
            return random.randint(100, 1000)
